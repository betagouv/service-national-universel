import { YoungType, YoungDto, totalClosedTickets } from "snu-lib";

import { JeuneModel } from "../../../../core/sejours/jeune/Jeune.model";
import { JeuneDocument } from "../provider/JeuneMongo.provider";

export class JeuneMapper {
    static toModels(jeuneDocuments: JeuneDocument[]): JeuneModel[] {
        return jeuneDocuments.map((jeuneDocument) => this.toModel(jeuneDocument));
    }

    static toModel(jeuneDocument: JeuneDocument): JeuneModel {
        return {
            id: jeuneDocument._id.toString(),
            prenom: jeuneDocument.firstName,
            nom: jeuneDocument.lastName,
            nationaliteFR: jeuneDocument.frenchNationality,
            paysNaissance: jeuneDocument.birthCountry,
            villeNaissance: jeuneDocument.birthCity,
            codePostalVilleNaissance: jeuneDocument.birthCityZip,
            email: jeuneDocument.email,
            emailVerifie: jeuneDocument.emailVerified,
            nouvelEmail: jeuneDocument.newEmail,
            telephone: jeuneDocument.phone,
            zoneTelephone: jeuneDocument.phoneZone,
            genre: jeuneDocument.gender,
            dateNaissance: jeuneDocument.birthdateAt,
            sessionNom: jeuneDocument.cohort,
            sessionId: jeuneDocument.cohortId,
            originalSessionNom: jeuneDocument.originalCohort,
            sessionChangeReason: jeuneDocument.cohortChangeReason,
            sessionChangeReasonDetail: jeuneDocument.cohortDetailedChangeReason,
            phase: jeuneDocument.phase,
            statut: jeuneDocument.status,
            statutPhase1: jeuneDocument.statusPhase1,
            statutPhase1Tmp: jeuneDocument.statusPhase1Tmp,
            statutPhase1Motif: jeuneDocument.statusPhase1Motif,
            statutPhase1MotifDetail: jeuneDocument.statusPhase1MotifDetail,
            statutPhase2: jeuneDocument.statusPhase2,
            statutPhase2UpdatedAt: jeuneDocument.statusPhase2UpdatedAt,
            statutPhase2OpenedAt: jeuneDocument.statusPhase2OpenedAt,
            statutPhase2Valide: jeuneDocument.statusPhase2ValidatedAt,
            statutPhase2Contrat: jeuneDocument.statusPhase2Contract,
            statutPhase3: jeuneDocument.statusPhase3,
            statutPhase3UpdatedAt: jeuneDocument.statusPhase3UpdatedAt,
            statutPhase3Valide: jeuneDocument.statusPhase3ValidatedAt,
            dernierStatutLe: jeuneDocument.lastStatusAt,
            raisonDesistement: jeuneDocument.withdrawnReason,
            messageDesistement: jeuneDocument.withdrawnMessage,
            aCommenceReinscription: jeuneDocument.hasStartedReinscription.toString(),
            etapeReinscription2023: jeuneDocument.reinscriptionStep2023,
            etapeInscription2023: jeuneDocument.inscriptionStep2023,
            etapeInscription: jeuneDocument.inscriptionStep,
            dateInscriptionFinalisee: jeuneDocument.inscriptionDoneDate,
            etapeCohesion2020: jeuneDocument.cohesion2020Step,
            messageCorrectionInscription: jeuneDocument.inscriptionCorrectionMessage,
            messageRefusInscription: jeuneDocument.inscriptionRefusedMessage,
            classeId: jeuneDocument.classeId,
            etablissementId: jeuneDocument.etablissementId,
            source: jeuneDocument.source,
            sejourId: jeuneDocument.sessionPhase1Id,
            sejourIdTemp: jeuneDocument.sessionPhase1IdTmp,
            centreId: jeuneDocument.cohesionCenterId,
            ligneDeBusId: jeuneDocument.ligneId,
            pointDeRassemblementId: jeuneDocument.meetingPointId,
            deplacementPhase1Autonomous: jeuneDocument.deplacementPhase1Autonomous,
            transportInfoGivenByLocal: jeuneDocument.transportInfoGivenByLocal,
            hasMeetingInformation: jeuneDocument.hasMeetingInformation,
            isTravelingByPlane: jeuneDocument.isTravelingByPlane,
            codeCenterTmp: jeuneDocument.codeCenterTmp,
            busTmp: jeuneDocument.busTmp,
            nomCentreCohesion: jeuneDocument.cohesionCenterName,
            codePostalCentreCohesion: jeuneDocument.cohesionCenterZip,
            villeCentreCohesion: jeuneDocument.cohesionCenterCity,
            expirationAutoAffectationPhase1: jeuneDocument.autoAffectationPhase1ExpiresAt,
            statutCandidaturePhase2: jeuneDocument.phase2ApplicationStatus,
            typeFichiersCandidaturePhase2: jeuneDocument.phase2ApplicationFilesType,
            nombreHeuresEffectueesPhase2: jeuneDocument.phase2NumberHoursDone,
            nombreHeuresEstimeesPhase2: jeuneDocument.phase2NumberHoursEstimated,
            nomStructurePhase3: jeuneDocument.phase3StructureName,
            domaineMissionPhase3: jeuneDocument.phase3MissionDomain,
            descriptionMissionPhase3: jeuneDocument.phase3MissionDescription,
            dateDebutMissionPhase3: jeuneDocument.phase3MissionStartAt,
            dateFinMissionPhase3: jeuneDocument.phase3MissionEndAt,
            prenomTuteurPhase3: jeuneDocument.phase3TutorFirstName,
            nomTuteurPhase3: jeuneDocument.phase3TutorLastName,
            emailTuteurPhase3: jeuneDocument.phase3TutorEmail,
            telephoneTuteurPhase3: jeuneDocument.phase3TutorPhone,
            noteTuteurPhase3: jeuneDocument.phase3TutorNote,
            tokenPhase3: jeuneDocument.phase3Token,
            adresse: jeuneDocument.address,
            niveauPrecisionCoordonnees: jeuneDocument.coordinatesAccuracyLevel,
            complementAdresse: jeuneDocument.complementAddress,
            codePostal: jeuneDocument.zip,
            ville: jeuneDocument.city,
            adresseVerifiee: jeuneDocument.addressVerified,
            codeVille: jeuneDocument.cityCode,
            densitePopulation: jeuneDocument.populationDensity,
            estRegionRurale: jeuneDocument.isRegionRural,
            departement: jeuneDocument.department,
            region: jeuneDocument.region,
            pays: jeuneDocument.country,
            localisation: { lat: jeuneDocument.location?.lat, lon: jeuneDocument.location?.lon },
            qpv: jeuneDocument.qpv,
            adresseEtranger: jeuneDocument.foreignAddress,
            villeEtranger: jeuneDocument.foreignCity,
            codePostalEtranger: jeuneDocument.foreignZip,
            paysEtranger: jeuneDocument.foreignCountry,
            situation: jeuneDocument.situation,
            niveauEtudes: jeuneDocument.grade,
            certificationScolaire: jeuneDocument.schoolCertification,
            scolarise: jeuneDocument.schooled,
            nomEtablissement: jeuneDocument.schoolName,
            ancienNomEtablissement: jeuneDocument.schoolNameOld,
            typeEtablissement: jeuneDocument.schoolType,
            adresseEtablissement: jeuneDocument.schoolAddress,
            complementAdresseEtablissement: jeuneDocument.schoolComplementAdresse,
            codePostalEtablissement: jeuneDocument.schoolZip,
            villeEtablissement: jeuneDocument.schoolCity,
            departementEtablissement: jeuneDocument.schoolDepartment,
            regionEtablissement: jeuneDocument.schoolRegion,
            paysEtablissement: jeuneDocument.schoolCountry,
            localisationEtablissement: {
                lat: jeuneDocument.schoolLocation?.lat,
                lon: jeuneDocument.schoolLocation?.lon,
            },
            statutParent1: jeuneDocument.parent1Status,
            prenomParent1: jeuneDocument.parent1FirstName,
            nomParent1: jeuneDocument.parent1LastName,
            emailParent1: jeuneDocument.parent1Email,
            telephoneParent1: jeuneDocument.parent1Phone,
            zoneTelephoneParent1: jeuneDocument.parent1PhoneZone,
            aUneAdressePropreParent1: jeuneDocument.parent1OwnAddress,
            adresseParent1: jeuneDocument.parent1Address,
            niveauPrecisionCoordonneesParent1: jeuneDocument.parent1coordinatesAccuracyLevel,
            complementAdresseParent1: jeuneDocument.parent1ComplementAddress,
            codePostalParent1: jeuneDocument.parent1Zip,
            villeParent1: jeuneDocument.parent1City,
            codeVilleParent1: jeuneDocument.parent1CityCode,
            departementParent1: jeuneDocument.parent1Department,
            regionParent1: jeuneDocument.parent1Region,
            paysParent1: jeuneDocument.parent1Country,
            parent1Location: { lat: jeuneDocument.parent1Location?.lat, lon: jeuneDocument.parent1Location?.lon },
            provenanceFranceConnectParent1: jeuneDocument.parent1FromFranceConnect,
            tokenInscription2023Parent1: jeuneDocument.parent1Inscription2023Token,
            donneesVerifieesParent1: jeuneDocument.parent1DataVerified,
            adresseVerifieeParent1: jeuneDocument.parent1AddressVerified,
            autorisationAutotestCovidParent1: jeuneDocument.parent1AllowCovidAutotest,
            autorisationDroitImageParent1: jeuneDocument.parent1AllowImageRights,
            preferenceContactParent1: jeuneDocument.parent1ContactPreference,
            statutParent2: jeuneDocument.parent2Status,
            prenomParent2: jeuneDocument.parent2FirstName,
            nomParent2: jeuneDocument.parent2LastName,
            emailParent2: jeuneDocument.parent2Email,
            telephoneParent2: jeuneDocument.parent2Phone,
            zoneTelephoneParent2: jeuneDocument.parent2PhoneZone,
            aUneAdressePropreParent2: jeuneDocument.parent2OwnAddress,
            adresseParent2: jeuneDocument.parent2Address,
            niveauPrecisionCoordonneesParent2: jeuneDocument.parent2coordinatesAccuracyLevel,
            complementAdresseParent2: jeuneDocument.parent2ComplementAddress,
            codePostalParent2: jeuneDocument.parent2Zip,
            villeParent2: jeuneDocument.parent2City,
            codeVilleParent2: jeuneDocument.parent2CityCode,
            departementParent2: jeuneDocument.parent2Department,
            regionParent2: jeuneDocument.parent2Region,
            paysParent2: jeuneDocument.parent2Country,
            parent2Location: { lat: jeuneDocument.parent2Location?.lat, lon: jeuneDocument.parent2Location?.lon },
            provenanceFranceConnectParent2: jeuneDocument.parent2FromFranceConnect,
            tokenInscription2023Parent2: jeuneDocument.parent2Inscription2023Token,
            autorisationDroitImageParent2: jeuneDocument.parent2AllowImageRights,
            reinitialisationAutorisationDroitImageParent: jeuneDocument.parent2AllowImageRightsReset,
            preferenceContactParent2: jeuneDocument.parent2ContactPreference,
            nomHote: jeuneDocument.hostLastName,
            prenomHote: jeuneDocument.hostFirstName,
            relationHote: jeuneDocument.hostRelationship,
            villeHote: jeuneDocument.hostCity,
            codePostalHote: jeuneDocument.hostZip,
            adresseHote: jeuneDocument.hostAddress,
            departementHote: jeuneDocument.hostDepartment,
            regionHote: jeuneDocument.hostRegion,
            handicap: jeuneDocument.handicap,
            allergies: jeuneDocument.allergies,
            handicapDansMemeDepartement: jeuneDocument.handicapInSameDepartment,
            accesMobiliteReduite: jeuneDocument.reducedMobilityAccess,
            beneficiairePPS: jeuneDocument.ppsBeneficiary,
            beneficiairePAI: jeuneDocument.paiBeneficiary,
            structureMedicoSociale: jeuneDocument.medicosocialStructure,
            nomStructureMedicosociale: jeuneDocument.medicosocialStructureName,
            adresseStructureMedicosociale: jeuneDocument.medicosocialStructureAddress,
            complementAdresseStructureMedicosociale: jeuneDocument.medicosocialStructureComplementAddress,
            codePostalStructureMedicosociale: jeuneDocument.medicosocialStructureZip,
            villeStructureMedicosociale: jeuneDocument.medicosocialStructureCity,
            departementStructureMedicosociale: jeuneDocument.medicosocialStructureDepartment,
            regionStructureMedicosociale: jeuneDocument.medicosocialStructureRegion,
            medicosocialStructureLocation: {
                lat: jeuneDocument.medicosocialStructureLocation?.lat,
                lon: jeuneDocument.medicosocialStructureLocation?.lon,
            },
            structureEngagee: jeuneDocument.engagedStructure,
            memeEcoleCLE: jeuneDocument.sameSchoolCLE,
            amenagementSpecifique: jeuneDocument.specificAmenagment,
            typeAmenagementSpecifique: jeuneDocument.specificAmenagmentType,
            activiteHautNiveau: jeuneDocument.highSkilledActivity,
            activiteHautNiveauDansMemeDepartement: jeuneDocument.highSkilledActivityInSameDepartment,
            typeActiviteHautNiveau: jeuneDocument.highSkilledActivityType,
            autorisationSNU: jeuneDocument.parentAllowSNU,
            autorisationSNUParent1: jeuneDocument.parent1AllowSNU,
            autorisationSNUParent2: jeuneDocument.parent2AllowSNU,
            dateValidationParent1: jeuneDocument.parent1ValidationDate,
            dateValidationParent2: jeuneDocument.parent2ValidationDate,
            fichiersConsentementTraitementDonnees: jeuneDocument.dataProcessingConsentmentFiles,
            consentementParent: jeuneDocument.parentConsentment,
            fichiersConsentementParent: jeuneDocument.parentConsentmentFiles,
            fichiersConsentementParentConformes: jeuneDocument.parentConsentmentFilesCompliant,
            informationsFichiersConsentementParent: jeuneDocument.parentConsentmentFilesCompliantInfo,
            consentement: jeuneDocument.consentment,
            droitImage: jeuneDocument.imageRight,
            fichiersDroitImage: jeuneDocument.imageRightFiles,
            statutFichiersDroitImage: jeuneDocument.imageRightFilesStatus,
            commentaireFichiersDroitImage: jeuneDocument.imageRightFilesComment,
            autotestPCR: jeuneDocument.autoTestPCR,
            fichiersAutotestPCR: jeuneDocument.autoTestPCRFiles,
            statutFichiersAutotestPCR: jeuneDocument.autoTestPCRFilesStatus,
            commentaireFichiersAutotestPCR: jeuneDocument.autoTestPCRFilesComment,
            reglementJeune: jeuneDocument.rulesYoung,
            reglementParent1: jeuneDocument.rulesParent1,
            reglementParent2: jeuneDocument.rulesParent2,
            fichiersReglement: jeuneDocument.rulesFiles,
            exactitudeInformations: jeuneDocument.informationAccuracy,
            acquittementDisponibiliteSessionTerminale: jeuneDocument.aknowledgmentTerminaleSessionAvailability,
            attestationSurLhonneurParentIdInvalide: jeuneDocument.parentStatementOfHonorInvalidId,
            journeeDefenseCitoyennete: jeuneDocument.jdc,
            motivations: jeuneDocument.motivations,
            domaines: jeuneDocument.domains,
            projetProfessionnel: jeuneDocument.professionnalProject,
            precisionProjetProfessionnel: jeuneDocument.professionnalProjectPrecision,
            periode: jeuneDocument.period,
            classementPeriode: jeuneDocument.periodRanking,
            mobiliteProcheEcole: jeuneDocument.mobilityNearSchool,
            mobiliteProcheDomicile: jeuneDocument.mobilityNearHome,
            mobiliteProcheProche: jeuneDocument.mobilityNearRelative,
            nomProcheMobilite: jeuneDocument.mobilityNearRelativeName,
            adresseProcheMobilite: jeuneDocument.mobilityNearRelativeAddress,
            codePostalProcheMobilite: jeuneDocument.mobilityNearRelativeZip,
            villeProcheMobilite: jeuneDocument.mobilityNearRelativeCity,
            transportsMobilite: jeuneDocument.mobilityTransport,
            autresTransportsMobilite: jeuneDocument.mobilityTransportOther,
            formatMission: jeuneDocument.missionFormat,
            engagement: jeuneDocument.engaged,
            descriptionEngagement: jeuneDocument.engagedDescription,
            localisationDesiree: jeuneDocument.desiredLocation,
            fichiersPreparationMilitaireIdentite: jeuneDocument.militaryPreparationFilesIdentity,
            fichiersPreparationMilitaireRecensement: jeuneDocument.militaryPreparationFilesCensus,
            fichiersPreparationMilitaireAutorisation: jeuneDocument.militaryPreparationFilesAuthorization,
            fichiersPreparationMilitaireCertificat: jeuneDocument.militaryPreparationFilesCertificate,
            statutFichiersPreparationMilitaire: jeuneDocument.statusMilitaryPreparationFiles,
            messageCorrectionPreparationMilitaire: jeuneDocument.militaryPreparationCorrectionMessage,

            fichiers: {
                cniFiles: jeuneDocument.files?.cniFiles,
                highSkilledActivityProofFiles: jeuneDocument.files.highSkilledActivityProofFiles,
                dataProcessingConsentmentFiles: jeuneDocument.files?.dataProcessingConsentmentFiles,
                parentConsentmentFiles: jeuneDocument.files?.parentConsentmentFiles,
                imageRightFiles: jeuneDocument.files?.imageRightFiles,
                autoTestPCRFiles: jeuneDocument.files?.autoTestPCRFiles,
                rulesFiles: jeuneDocument.files?.rulesFiles,
                militaryPreparationFilesIdentity: jeuneDocument.files?.militaryPreparationFilesIdentity,
                militaryPreparationFilesCensus: jeuneDocument.files?.militaryPreparationFilesCensus,
                militaryPreparationFilesAuthorization: jeuneDocument.files?.militaryPreparationFilesAuthorization,
                militaryPreparationFilesCertificate: jeuneDocument.files?.militaryPreparationFilesCertificate,
            },
            missionsInMail: jeuneDocument.missionsInMail,
            dateExpirationDernierFichierCNI: jeuneDocument.latestCNIFileExpirationDate,
            fichierCNINonValideAuDebut: jeuneDocument.CNIFileNotValidOnStart,
            categorieDernierFichierCNI: jeuneDocument.latestCNIFileCategory,
            youngPhase1Agreement: jeuneDocument.youngPhase1Agreement,
            status_equivalence: jeuneDocument.status_equivalence,
            correctionRequests: jeuneDocument.correctionRequests?.map((correctionRequest) => ({
                moderatorId: correctionRequest.moderatorId.toString(),
                cohort: correctionRequest.cohort,
                field: correctionRequest.field,
                reason: correctionRequest.reason,
                message: correctionRequest.message,
                status: correctionRequest.status,
                createdAt: correctionRequest.createdAt,
                sentAt: correctionRequest.sentAt,
                remindedAt: correctionRequest.remindedAt,
                correctedAt: correctionRequest.correctedAt,
                canceledAt: correctionRequest.canceledAt,
            })),
            notes: jeuneDocument.notes,
            hasNotes: jeuneDocument.hasNotes,
            defenseInterest: jeuneDocument.defenseInterest,
            defenseTypeInterest: jeuneDocument.defenseTypeInterest,
            defenseDomainInterest: jeuneDocument.defenseDomainInterest,
            defenseMotivationInterest: jeuneDocument.defenseMotivationInterest,
            securityInterest: jeuneDocument.securityInterest,
            securityDomainInterest: jeuneDocument.securityDomainInterest,
            solidarityInterest: jeuneDocument.solidarityInterest,
            healthInterest: jeuneDocument.healthInterest,
            educationInterest: jeuneDocument.educationInterest,
            cultureInterest: jeuneDocument.cultureInterest,
            sportInterest: jeuneDocument.sportInterest,
            environmentInterest: jeuneDocument.environmentInterest,
            citizenshipInterest: jeuneDocument.citizenshipInterest,
            deletedAt: jeuneDocument.deletedAt,
            createdAt: jeuneDocument.createdAt,
            updatedAt: jeuneDocument.updatedAt,
        };
    }

    static toEntity(
        jeuneModel: JeuneModel,
    ): Omit<
        YoungType,
        | "metadata"
        | "createdAt"
        | "updatedAt"
        | "cniFiles"
        | "highSkilledActivityProofFiles"
        | "parentConsentmentFiles"
        | "autoTestPCRFiles"
        | "imageRightFiles"
        | "dataProcessingConsentmentFiles"
        | "rulesFiles"
        | "militaryPreparationFilesIdentity"
        | "militaryPreparationFilesCensus"
        | "militaryPreparationFilesAuthorization"
        | "militaryPreparationFilesCertificate"
        | "domains"
        | "periodRanking"
        | "mobilityTransport"
        | "notes"
        | "statusPhase2Contract"
        | "historic"
        | "phase2ApplicationStatus"
        | "phase2ApplicationFilesType"
        | "missionsInMail"
        | "loginAttempts"
        | "token2FA"
        | "attempts2FA"
        | "lastLoginAt"
        | "forgotPasswordResetToken"
        | "acceptCGU"
        | "invitationToken"
        | "phase"
        | "statusPhase2"
        | "statusPhase3"
        | "lastStatusAt"
        | "hasStartedReinscription"
        | "cohesion2020Step"
        | "tokenEmailValidation"
        | "attemptsEmailValidation"
        | "cohesionStayMedicalFileDownload"
        | "convocationFileDownload"
        | "source"
        | "phase3Token"
        | "parent1FromFranceConnect"
        | "parent2FromFranceConnect"
        | "imageRightFilesStatus"
        | "autoTestPCRFilesStatus"
        | "hasNotes"
    > {
        return {
            _id: jeuneModel.id,
            status: jeuneModel.statut,
            statusPhase1: jeuneModel.statutPhase1,
            email: jeuneModel.email,
            birthdateAt: jeuneModel.dateNaissance,
            phone: jeuneModel.telephone,
            cohesionCenterId: jeuneModel.centreId,
            handicapInSameDepartment: jeuneModel.handicapMemeDepartement,
            gender: jeuneModel.genre,
            qpv: jeuneModel.qpv,
            handicap: jeuneModel.psh,
            department: jeuneModel.departement,
            region: jeuneModel.region,
            location: jeuneModel.localisation,
            schoolDepartment: jeuneModel.departementScolarite,
            schoolRegion: jeuneModel.regionScolarite,
            schoolCountry: jeuneModel.paysScolarite,
            meetingPointId: jeuneModel.pointDeRassemblementId,
            ligneId: jeuneModel.ligneDeBusId,
            sessionPhase1Id: jeuneModel.sejourId,
            hasMeetingInformation: jeuneModel.hasPDR,
            cohortId: jeuneModel.sessionId,
            cohort: jeuneModel.sessionNom,
            originalCohortId: jeuneModel.originalSessionId,
            originalCohort: jeuneModel.originalSessionNom,
            firstName: jeuneModel.prenom,
            lastName: jeuneModel.nom,
            deplacementPhase1Autonomous: jeuneModel.deplacementPhase1Autonomous,
            transportInfoGivenByLocal: jeuneModel.transportInfoGivenByLocal,
            // Parent 1 Information
            parent1FirstName: jeuneModel.parent1Prenom,
            parent1LastName: jeuneModel.parent1Nom,
            parent1Email: jeuneModel.parent1Email,
            parent1Phone: jeuneModel.parent1Telephone,
            // Parent 2 Information
            parent2FirstName: jeuneModel.parent2Prenom,
            parent2LastName: jeuneModel.parent2Nom,
            parent2Email: jeuneModel.parent2Email,
            parent2Phone: jeuneModel.parent2Telephone,
            youngPhase1Agreement: jeuneModel.youngPhase1Agreement,
            cohortChangeReason: jeuneModel.sessionChangeReason,
            // CLE
            classeId: jeuneModel.classeId,
        };
    }
    static toDto(jeune: JeuneModel): YoungDto {
        return {
            _id: jeune.id,
            id: jeune.id,
            firstName: jeune.prenom,
            lastName: jeune.nom,
            frenchNationality: jeune.nationaliteFR,
            birthCountry: jeune.paysNaissance,
            birthCity: jeune.villeNaissance,
            birthCityZip: jeune.codePostalVilleNaissance,
            email: jeune.email,
            emailVerified: jeune.emailVerifie,
            newEmail: jeune.nouvelEmail,
            phone: jeune.telephone,
            phoneZone: jeune.zoneTelephone,
            gender: jeune.genre,
            birthdateAt: jeune.dateNaissance,
            cohort: jeune.sessionNom,
            cohortId: jeune.sessionId,
            originalCohort: jeune.originalSessionNom,
            cohortChangeReason: jeune.sessionChangeReason,
            cohortDetailedChangeReason: jeune.sessionChangeReasonDetail,
            phase: jeune.phase,
            status: jeune.statut,
            statusPhase1: jeune.statutPhase1,
            statusPhase1Tmp: jeune.statutPhase1Tmp,
            statusPhase1Motif: jeune.statutPhase1Motif,
            statusPhase1MotifDetail: jeune.statutPhase1MotifDetail,
            statusPhase2: jeune.statutPhase2,
            statusPhase2UpdatedAt: jeune.statutPhase2UpdatedAt,
            statusPhase2OpenedAt: jeune.statutPhase2OpenedAt,
            statusPhase2ValidatedAt: jeune.statutPhase2Valide,
            statusPhase2Contract: jeune.statutPhase2Contrat,
            statusPhase3: jeune.statutPhase3,
            statusPhase3UpdatedAt: jeune.statutPhase3UpdatedAt,
            statusPhase3ValidatedAt: jeune.statutPhase3Valide,
            lastStatusAt: jeune.dernierStatutLe,
            withdrawnReason: jeune.raisonDesistement,
            withdrawnMessage: jeune.messageDesistement,
            hasStartedReinscription: jeune.aCommenceReinscription,
            reinscriptionStep2023: jeune.etapeReinscription2023,
            inscriptionStep2023: jeune.etapeInscription2023,
            inscriptionStep: jeune.etapeInscription,
            inscriptionDoneDate: jeune.dateInscriptionFinalisee,
            cohesion2020Step: jeune.etapeCohesion2020,
            inscriptionCorrectionMessage: jeune.messageCorrectionInscription,
            inscriptionRefusedMessage: jeune.messageRefusInscription,
            classeId: jeune.classeId,
            etablissementId: jeune.etablissementId,
            source: jeune.source,
            sessionPhase1Id: jeune.sejourId,
            sessionPhase1IdTmp: jeune.sejourIdTemp,
            cohesionCenterId: jeune.centreId,
            ligneId: jeune.ligneDeBusId,
            meetingPointId: jeune.pointDeRassemblementId,
            deplacementPhase1Autonomous: jeune.deplacementPhase1Autonomous,
            transportInfoGivenByLocal: jeune.transportInfoGivenByLocal,
            hasMeetingInformation: jeune.hasMeetingInformation,
            isTravelingByPlane: jeune.isTravelingByPlane,
            codeCenterTmp: jeune.codeCenterTmp,
            busTmp: jeune.busTmp,
            cohesionCenterName: jeune.nomCentreCohesion,
            cohesionCenterZip: jeune.codePostalCentreCohesion,
            cohesionCenterCity: jeune.villeCentreCohesion,
            autoAffectationPhase1ExpiresAt: jeune.expirationAutoAffectationPhase1,
            phase2ApplicationStatus: jeune.statutCandidaturePhase2,
            phase2ApplicationFilesType: jeune.typeFichiersCandidaturePhase2,
            phase2NumberHoursDone: jeune.nombreHeuresEffectueesPhase2,
            phase2NumberHoursEstimated: jeune.nombreHeuresEstimeesPhase2,
            phase3StructureName: jeune.nomStructurePhase3,
            phase3MissionDomain: jeune.domaineMissionPhase3,
            phase3MissionDescription: jeune.descriptionMissionPhase3,
            phase3MissionStartAt: jeune.dateDebutMissionPhase3,
            phase3MissionEndAt: jeune.dateFinMissionPhase3,
            phase3TutorFirstName: jeune.prenomTuteurPhase3,
            phase3TutorLastName: jeune.nomTuteurPhase3,
            phase3TutorEmail: jeune.emailTuteurPhase3,
            phase3TutorPhone: jeune.telephoneTuteurPhase3,
            phase3TutorNote: jeune.noteTuteurPhase3,
            phase3Token: jeune.tokenPhase3,
            address: jeune.adresse,
            coordinatesAccuracyLevel: jeune.niveauPrecisionCoordonnees,
            complementAddress: jeune.complementAdresse,
            zip: jeune.codePostal,
            city: jeune.ville,
            addressVerified: jeune.adresseVerifiee,
            cityCode: jeune.codeVille,
            populationDensity: jeune.densitePopulation,
            isRegionRural: jeune.estRegionRurale,
            department: jeune.departement,
            region: jeune.region,
            country: jeune.pays,
            location: { lat: jeune.localisation?.lat, lon: jeune.localisation?.lon },
            qpv: jeune.qpv,
            foreignAddress: jeune.adresseEtranger,
            foreignCity: jeune.villeEtranger,
            foreignZip: jeune.codePostalEtranger,
            foreignCountry: jeune.paysEtranger,
            situation: jeune.situation,
            grade: jeune.niveauEtudes,
            schoolCertification: jeune.certificationScolaire,
            schooled: jeune.scolarise,
            schoolName: jeune.nomEtablissement,
            schoolNameOld: jeune.ancienNomEtablissement,
            schoolType: jeune.typeEtablissement,
            schoolAddress: jeune.adresseEtablissement,
            schoolComplementAdresse: jeune.complementAdresseEtablissement,
            schoolZip: jeune.codePostalEtablissement,
            schoolCity: jeune.villeEtablissement,
            schoolDepartment: jeune.departementEtablissement,
            schoolRegion: jeune.regionEtablissement,
            schoolCountry: jeune.paysEtablissement,
            schoolLocation: { lat: jeune.localisationEtablissement?.lat, lon: jeune.localisationEtablissement?.lon },
            schoolId: jeune.ecoleRamsesId,
            academy: jeune.academie,
            employed: jeune.employe,
            parent1Status: jeune.statutParent1,
            parent1FirstName: jeune.prenomParent1,
            parent1LastName: jeune.nomParent1,
            parent1Email: jeune.emailParent1,
            parent1Phone: jeune.telephoneParent1,
            parent1PhoneZone: jeune.zoneTelephoneParent1,
            parent1OwnAddress: jeune.aUneAdressePropreParent1,
            parent1Address: jeune.adresseParent1,
            parent1coordinatesAccuracyLevel: jeune.niveauPrecisionCoordonneesParent1,
            parent1ComplementAddress: jeune.complementAdresseParent1,
            parent1Zip: jeune.codePostalParent1,
            parent1City: jeune.villeParent1,
            parent1CityCode: jeune.codeVilleParent1,
            parent1Department: jeune.departementParent1,
            parent1Region: jeune.regionParent1,
            parent1Country: jeune.paysParent1,
            parent1Location: { lat: jeune.parent1Location?.lat, lon: jeune.parent1Location?.lon },
            parent1FromFranceConnect: jeune.provenanceFranceConnectParent1,
            parent1Inscription2023Token: jeune.tokenInscription2023Parent1,
            parent1DataVerified: jeune.donneesVerifieesParent1,
            parent1AddressVerified: jeune.adresseVerifieeParent1,
            parent1AllowCovidAutotest: jeune.autorisationAutotestCovidParent1,
            parent1AllowImageRights: jeune.autorisationDroitImageParent1,
            parent1ContactPreference: jeune.preferenceContactParent1,
            parent2Status: jeune.statutParent2,
            parent2FirstName: jeune.prenomParent2,
            parent2LastName: jeune.nomParent2,
            parent2Email: jeune.emailParent2,
            parent2Phone: jeune.telephoneParent2,
            parent2PhoneZone: jeune.zoneTelephoneParent2,
            parent2OwnAddress: jeune.aUneAdressePropreParent2,
            parent2Address: jeune.adresseParent2,
            parent2coordinatesAccuracyLevel: jeune.niveauPrecisionCoordonneesParent2,
            parent2ComplementAddress: jeune.complementAdresseParent2,
            parent2Zip: jeune.codePostalParent2,
            parent2City: jeune.villeParent2,
            parent2CityCode: jeune.codeVilleParent2,
            parent2Department: jeune.departementParent2,
            parent2Region: jeune.regionParent2,
            parent2Country: jeune.paysParent2,
            parent2Location: { lat: jeune.parent2Location?.lat, lon: jeune.parent2Location?.lon },
            parent2FromFranceConnect: jeune.provenanceFranceConnectParent2,
            parent2Inscription2023Token: jeune.tokenInscription2023Parent2,
            parent2AllowImageRights: jeune.autorisationDroitImageParent2,
            parent2AllowImageRightsReset: jeune.reinitialisationAutorisationDroitImageParent,
            parent2ContactPreference: jeune.preferenceContactParent2,
            hostLastName: jeune.nomHote,
            hostFirstName: jeune.prenomHote,
            hostRelationship: jeune.relationHote,
            hostCity: jeune.villeHote,
            hostZip: jeune.codePostalHote,
            hostAddress: jeune.adresseHote,
            hostDepartment: jeune.departementHote,
            hostRegion: jeune.regionHote,
            handicap: jeune.handicap,
            allergies: jeune.allergies,
            handicapInSameDepartment: jeune.handicapDansMemeDepartement,
            reducedMobilityAccess: jeune.accesMobiliteReduite,
            ppsBeneficiary: jeune.beneficiairePPS,
            paiBeneficiary: jeune.beneficiairePAI,
            medicosocialStructure: jeune.structureMedicoSociale,
            medicosocialStructureName: jeune.nomStructureMedicosociale,
            medicosocialStructureAddress: jeune.adresseStructureMedicosociale,
            medicosocialStructureComplementAddress: jeune.complementAdresseStructureMedicosociale,
            medicosocialStructureZip: jeune.codePostalStructureMedicosociale,
            medicosocialStructureCity: jeune.villeStructureMedicosociale,
            medicosocialStructureDepartment: jeune.departementStructureMedicosociale,
            medicosocialStructureRegion: jeune.regionStructureMedicosociale,
            medicosocialStructureLocation: {
                lat: jeune.medicosocialStructureLocation?.lat,
                lon: jeune.medicosocialStructureLocation?.lon,
            },
            engagedStructure: jeune.structureEngagee,
            sameSchoolCLE: jeune.memeEcoleCLE,
            specificAmenagment: jeune.amenagementSpecifique,
            specificAmenagmentType: jeune.typeAmenagementSpecifique,
            highSkilledActivity: jeune.activiteHautNiveau,
            highSkilledActivityInSameDepartment: jeune.activiteHautNiveauDansMemeDepartement,
            highSkilledActivityType: jeune.typeActiviteHautNiveau,
            parentAllowSNU: jeune.autorisationSNU,
            parent1AllowSNU: jeune.autorisationSNUParent1,
            parent2AllowSNU: jeune.autorisationSNUParent2,
            parent1ValidationDate: jeune.dateValidationParent1,
            parent2ValidationDate: jeune.dateValidationParent2,
            dataProcessingConsentmentFiles: jeune.fichiersConsentementTraitementDonnees,
            parentConsentment: jeune.consentementParent,
            parentConsentmentFiles: jeune.fichiersConsentementParent,
            parentConsentmentFilesCompliant: jeune.fichiersConsentementParentConformes,
            parentConsentmentFilesCompliantInfo: jeune.informationsFichiersConsentementParent,
            consentment: jeune.consentement,
            imageRight: jeune.droitImage,
            imageRightFiles: jeune.fichiersDroitImage,
            imageRightFilesStatus: jeune.statutFichiersDroitImage,
            imageRightFilesComment: jeune.commentaireFichiersDroitImage,
            autoTestPCR: jeune.autotestPCR,
            autoTestPCRFiles: jeune.fichiersAutotestPCR,
            autoTestPCRFilesStatus: jeune.statutFichiersAutotestPCR,
            autoTestPCRFilesComment: jeune.commentaireFichiersAutotestPCR,
            rulesYoung: jeune.reglementJeune,
            rulesParent1: jeune.reglementParent1,
            rulesParent2: jeune.reglementParent2,
            rulesFiles: jeune.fichiersReglement,
            informationAccuracy: jeune.exactitudeInformations,
            aknowledgmentTerminaleSessionAvailability: jeune.acquittementDisponibiliteSessionTerminale,
            parentStatementOfHonorInvalidId: jeune.attestationSurLhonneurParentIdInvalide,
            jdc: jeune.journeeDefenseCitoyennete,
            motivations: jeune.motivations,
            domains: jeune.domaines,
            professionnalProject: jeune.projetProfessionnel,
            professionnalProjectPrecision: jeune.precisionProjetProfessionnel,
            period: jeune.periode,
            periodRanking: jeune.classementPeriode,
            mobilityNearSchool: jeune.mobiliteProcheEcole,
            mobilityNearHome: jeune.mobiliteProcheDomicile,
            mobilityNearRelative: jeune.mobiliteProcheProche,
            mobilityNearRelativeName: jeune.nomProcheMobilite,
            mobilityNearRelativeAddress: jeune.adresseProcheMobilite,
            mobilityNearRelativeZip: jeune.codePostalProcheMobilite,
            mobilityNearRelativeCity: jeune.villeProcheMobilite,
            mobilityTransport: jeune.transportsMobilite,
            mobilityTransportOther: jeune.autresTransportsMobilite,
            missionFormat: jeune.formatMission,
            engaged: jeune.engagement,
            engagedDescription: jeune.descriptionEngagement,
            desiredLocation: jeune.localisationDesiree,
            militaryPreparationFilesIdentity: jeune.fichiersPreparationMilitaireIdentite,
            militaryPreparationFilesCensus: jeune.fichiersPreparationMilitaireRecensement,
            militaryPreparationFilesAuthorization: jeune.fichiersPreparationMilitaireAutorisation,
            militaryPreparationFilesCertificate: jeune.fichiersPreparationMilitaireCertificat,
            statusMilitaryPreparationFiles: jeune.statutFichiersPreparationMilitaire,
            militaryPreparationCorrectionMessage: jeune.messageCorrectionPreparationMilitaire,
            files: {
                cniFiles: jeune.fichiers?.cniFiles,
                highSkilledActivityProofFiles: jeune.fichiers?.highSkilledActivityProofFiles,
                dataProcessingConsentmentFiles: jeune.fichiers?.dataProcessingConsentmentFiles,
                parentConsentmentFiles: jeune.fichiers?.parentConsentmentFiles,
                imageRightFiles: jeune.fichiers?.imageRightFiles,
                autoTestPCRFiles: jeune.fichiers?.autoTestPCRFiles,
                rulesFiles: jeune.fichiers?.rulesFiles,
                militaryPreparationFilesIdentity: jeune.fichiers?.militaryPreparationFilesIdentity,
                militaryPreparationFilesCensus: jeune.fichiers?.militaryPreparationFilesCensus,
                militaryPreparationFilesAuthorization: jeune.fichiers?.militaryPreparationFilesAuthorization,
                militaryPreparationFilesCertificate: jeune.fichiers?.militaryPreparationFilesCertificate,
            },
            latestCNIFileExpirationDate: jeune.dateExpirationDernierFichierCNI,
            CNIFileNotValidOnStart: jeune.fichierCNINonValideAuDebut,
            latestCNIFileCategory: jeune.categorieDernierFichierCNI,
            missionsInMail: jeune.missionsInMail,
            youngPhase1Agreement: jeune.youngPhase1Agreement,
            status_equivalence: jeune.status_equivalence,
            correctionRequests: jeune.correctionRequests,
            notes: jeune.notes,
            hasNotes: jeune.hasNotes,
            defenseInterest: jeune.defenseInterest,
            defenseTypeInterest: jeune.defenseTypeInterest,
            defenseDomainInterest: jeune.defenseDomainInterest,
            defenseMotivationInterest: jeune.defenseMotivationInterest,
            securityInterest: jeune.securityInterest,
            securityDomainInterest: jeune.securityDomainInterest,
            solidarityInterest: jeune.solidarityInterest,
            healthInterest: jeune.healthInterest,
            educationInterest: jeune.educationInterest,
            cultureInterest: jeune.cultureInterest,
            sportInterest: jeune.sportInterest,
            environmentInterest: jeune.environmentInterest,
            citizenshipInterest: jeune.citizenshipInterest,
            deletedAt: jeune.deletedAt,
            createdAt: jeune.createdAt,
            updatedAt: jeune.updatedAt,
        };
    }
}
