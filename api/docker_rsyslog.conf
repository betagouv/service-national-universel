# rsyslog configuration file
#
# For more information see /usr/share/doc/rsyslog-*/rsyslog_conf.html
# or latest version online at http://www.rsyslog.com/doc/rsyslog_conf.html
# If you experience problems, see http://www.rsyslog.com/doc/troubleshoot.html


#### Global directives ####

# # Sets the directory that rsyslog uses for work files.
global(workDirectory="/var/lib/rsyslog")
global(abortOnUncleanConfig="on")


#### Modules ####
module(load="imfile")
module(load="omelasticsearch")
module(load="mmjsonparse")

#### Rules ####

input(type="imfile"
	File="/var/log/api.output.log"
	Tag="api:notice"
)
input(type="imfile"
	File="/var/log/api.error.log"
	Tag="api:error"
	Severity="error"
	readMode="2"
)

set $.env = getenv("NODE_ENV");

template(
  name="apiLogsIndexName"
  type="string"
  string="%$.env%-api-logs-%timereported:1:10:date-rfc3339%"
)

template(
  name="apiCallsIndexName"
  type="string"
  string="%$.env%-api-calls-%timereported:1:10:date-rfc3339%"
)

template(
  name="apiTasksIndexName"
  type="string"
  string="%$.env%-api-tasks-%timereported:1:10:date-rfc3339%"
)

template(
  name="apiLogs"
  type="list"
  option.jsonf="on"
  option.casesensitive="on"
) {
  property(outname="@timestamp" name="timereported" format="jsonf" dateFormat="rfc3339")
  property(outname="host" name="hostname" format="jsonf")
  constant(outname="release" value=`echo $RELEASE` format="jsonf")
  property(outname="message" name="msg" format="jsonf")
  property(outname="severity" name="syslogseverity-text" format="jsonf")
  property(outname="syslogtag" name="syslogtag" format="jsonf")
}

template(
  name="apiCalls"
  type="list"
  option.jsonf="on"
  option.casesensitive="on"
) {
  property(outname="@timestamp" name="timereported" format="jsonf" dateFormat="rfc3339")
  property(outname="host" name="hostname" format="jsonf")
  constant(outname="release" value=`echo $RELEASE` format="jsonf")
  property(outname="method" name="$!method" format="jsonf" onEmpty="skip")
  property(outname="url" name="$!url" format="jsonf" onEmpty="skip")
  property(outname="status" name="$!status" format="jsonf" onEmpty="skip")
  property(outname="responseTime" name="$!responseTime" format="jsonf" onEmpty="skip")
  property(outname="ip" name="$!ip" format="jsonf" onEmpty="skip")
  property(outname="payload" name="$!payload" format="jsonf" onEmpty="skip")
  property(outname="userID" name="$!userID" format="jsonf" onEmpty="skip")
  property(outname="userRole" name="$!userRole" format="jsonf" onEmpty="skip")
}

template(
  name="apiTasks"
  type="list"
  option.jsonf="on"
  option.casesensitive="on"
) {
  property(outname="@timestamp" name="timereported" format="jsonf" dateFormat="rfc3339")
  property(outname="host" name="hostname" format="jsonf")
  constant(outname="release" value=`echo $RELEASE` format="jsonf")
  property(outname="queue" name="$!queue" format="jsonf" onEmpty="skip")
  property(outname="name" name="$!name" format="jsonf" onEmpty="skip")
  property(outname="id" name="$!id" format="jsonf" onEmpty="skip")
  property(outname="type" name="$!type" format="jsonf" onEmpty="skip")
  property(outname="addedOn" name="$!addedOn" format="jsonf" onEmpty="skip")
  property(outname="processedOn" name="$!processedOn" format="jsonf" onEmpty="skip")
  property(outname="finishedOn" name="$!finishedOn" format="jsonf" onEmpty="skip")
  property(outname="data" name="$!data" format="jsonf" onEmpty="skip")
  property(outname="attempts" name="$!attempts" format="jsonf" onEmpty="skip")
  property(outname="error_id" name="$!error_id" format="jsonf" onEmpty="skip")
}

if ($msg contains '"method":') then {
  action(type="mmjsonparse" cookie="")
  if $parsesuccess == "OK" then {
    action(
      type="omelasticsearch"
      server=`echo $ES_HOST`
      serverport="443"
      usehttps="on"
      uid=`echo $ES_USER`
      pwd=`echo $ES_PASSWORD`
      template="apiCalls"
      dynSearchIndex="on"
      searchIndex="apiCallsIndexName"
      searchType="_doc"
      bulkmode="on"
      queue.type="linkedlist"
      queue.size="5000"
      queue.dequeuebatchsize="300"
      action.resumeretrycount="-1"
    )
    stop
  }
} else if ($msg contains '"queue":') then {
  action(type="mmjsonparse" cookie="")
  if $parsesuccess == "OK" then {
    action(
      type="omelasticsearch"
      server=`echo $ES_HOST`
      serverport="443"
      usehttps="on"
      uid=`echo $ES_USER`
      pwd=`echo $ES_PASSWORD`
      template="apiTasks"
      dynSearchIndex="on"
      searchIndex="apiTasksIndexName"
      searchType="_doc"
      bulkmode="on"
      queue.type="linkedlist"
      queue.size="5000"
      queue.dequeuebatchsize="300"
      action.resumeretrycount="-1"
    )
    stop
  }
}

action(
  type="omelasticsearch"
  server=`echo $ES_HOST`
  serverport="443"
  usehttps="on"
  uid=`echo $ES_USER`
  pwd=`echo $ES_PASSWORD`
  template="apiLogs"
  dynSearchIndex="on"
  searchIndex="apiLogsIndexName"
  searchType="_doc"
  bulkmode="on"
  queue.type="linkedlist"
  queue.size="5000"
  queue.dequeuebatchsize="300"
  action.resumeretrycount="-1"
)
