# rsyslog configuration file
#
# For more information see /usr/share/doc/rsyslog-*/rsyslog_conf.html
# or latest version online at http://www.rsyslog.com/doc/rsyslog_conf.html
# If you experience problems, see http://www.rsyslog.com/doc/troubleshoot.html


#### Global directives ####

# # Sets the directory that rsyslog uses for work files.
global(workDirectory="/var/lib/rsyslog")
global(abortOnUncleanConfig="on")


#### Modules ####
module(load="imfile")
module(load="omelasticsearch")
module(load="mmjsonparse")

#### Rules ####

input(type="imfile"
	File="/var/log/api.output.log"
	Tag="api:notice"
)
input(type="imfile"
	File="/var/log/api.error.log"
	Tag="api:error"
	Severity="error"
	readMode="2"
)

set $.env = getenv("NODE_ENV");

template(
  name="apiLogsIndexName"
  type="string"
  string="%$.env%-api-logs-%timereported:1:10:date-rfc3339%"
)

template(
  name="apiCallsIndexName"
  type="string"
  string="%$.env%-api-calls-%timereported:1:10:date-rfc3339%"
)

template(
  name="apiTasksIndexName"
  type="string"
  string="%$.env%-api-tasks-%timereported:1:10:date-rfc3339%"
)

template(
  name="apiLogs"
  type="list"
  option.json="on"
) {
  constant(value="{")
  constant(value="\"timestamp\":\"")      property(name="timereported" dateFormat="rfc3339")
  constant(value="\",\"message\":\"")     property(name="msg")
  constant(value="\",\"host\":\"")        property(name="hostname")
  constant(value="\",\"severity\":\"")    property(name="syslogseverity-text")
  constant(value="\",\"syslogtag\":\"")   property(name="syslogtag")
  constant(value="\"}\n")
}

template(
  name="apiCalls"
  type="list"
  option.json="on"
) {
  constant(value="{")
  constant(value="\"timestamp\":\"")      property(name="timereported" dateFormat="rfc3339")
  constant(value="\",\"host\":\"")        property(name="hostname")
  constant(value="\",\"release\":\"")        constant(value=`echo $RELEASE`)
  constant(value="\",\"method\":\"")    property(name="$!method")
  constant(value="\",\"url\":\"")    property(name="$!url")
  constant(value="\",\"status\":\"")    property(name="$!status")
  constant(value="\",\"responseTime\":\"")    property(name="$!responseTime")
  constant(value="\",\"ip\":\"")    property(name="$!ip")
  constant(value="\",\"payload\":\"")    property(name="$!payload")
  constant(value="\",\"userID\":\"")    property(name="$!userID")
  constant(value="\",\"userRole\":\"")    property(name="$!userRole")
  constant(value="\"}\n")
}

template(
  name="apiTasks"
  type="list"
  option.json="on"
) {
  constant(value="{")
  constant(value="\"timestamp\":\"")      property(name="timereported" dateFormat="rfc3339")
  constant(value="\",\"host\":\"")        property(name="hostname")
  constant(value="\",\"release\":\"")        constant(value=`echo $RELEASE`)
  constant(value="\",\"queue\":\"")    property(name="$!queue")
  constant(value="\",\"name\":\"")    property(name="$!name")
  constant(value="\",\"id\":\"")    property(name="$!id")
  constant(value="\",\"type\":\"")    property(name="$!type")
  constant(value="\",\"addedOn\":\"")    property(name="$!addedOn")
  constant(value="\",\"processedOn\":\"")    property(name="$!processedOn")
  constant(value="\",\"finishedOn\":\"")    property(name="$!finishedOn")
  constant(value="\",\"data\":\"")    property(name="$!data")
  constant(value="\",\"attempts\":\"")    property(name="$!attempts")
  constant(value="\",\"error_id\":\"")    property(name="$!error_id")
  constant(value="\"}\n")
}

if ($msg contains '"method":') then {
  action(type="mmjsonparse" cookie="")
  if $parsesuccess == "OK" then {
    action(
      type="omelasticsearch"
      server=`echo $ES_HOST`
      serverport="443"
      usehttps="on"
      uid=`echo $ES_USER`
      pwd=`echo $ES_PASSWORD`
      template="apiCalls"
      searchIndex="testrt-api-calls"
      searchType="test-type"
      bulkmode="on"
      queue.type="linkedlist"
      queue.size="5000"
      queue.dequeuebatchsize="300"
      action.resumeretrycount="-1"
    )
    stop
  }
} else if ($msg contains '"queue":') then {
  action(type="mmjsonparse" cookie="")
  if $parsesuccess == "OK" then {
    action(
      type="omelasticsearch"
      server=`echo $ES_HOST`
      serverport="443"
      usehttps="on"
      uid=`echo $ES_USER`
      pwd=`echo $ES_PASSWORD`
      template="apiTasks"
      dynSearchIndex="on"
      searchIndex="apiTasksIndexName"
      searchType="test-type"
      bulkmode="on"
      queue.type="linkedlist"
      queue.size="5000"
      queue.dequeuebatchsize="300"
      action.resumeretrycount="-1"
    )
    stop
  }
}

action(
  type="omelasticsearch"
  server=`echo $ES_HOST`
  serverport="443"
  usehttps="on"
  uid=`echo $ES_USER`
  pwd=`echo $ES_PASSWORD`
  template="apiLogs"
  dynSearchIndex="on"
  searchIndex="apiLogsIndexName"
  searchType="test-type"
  bulkmode="on"
  queue.type="linkedlist"
  queue.size="5000"
  queue.dequeuebatchsize="300"
  action.resumeretrycount="-1"
)
