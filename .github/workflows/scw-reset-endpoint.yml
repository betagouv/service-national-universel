name: Reset Container Endpoint (Scaleway)

on:
  workflow_dispatch:
  push:
    branches:
      - scw-reset-endpoint

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      env_name: ${{ steps.env_name.outputs.env_name }}

    steps:
      - uses: actions/checkout@v4

      - name: Get custom-env name
        id: env_name
        run: |
          env_name=$(.github/scripts/get_custom_env_name.sh ${{ github.ref_name }})
          echo "env_name: $env_name"
          echo "env_name=$env_name" >> $GITHUB_OUTPUT

  reset:
    runs-on: ubuntu-latest
    needs: [prepare]
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref_name }}
      cancel-in-progress: false
    env:
      SCW_ACCESS_KEY: ${{ secrets.SCW_CI_DEPLOY_ACCESS_KEY }}
      SCW_SECRET_KEY: ${{ secrets.SCW_CI_DEPLOY_SECRET_KEY }}
      PG_CONN_STR: ${{ secrets.SCW_CI_BACKEND_CONN_STR }}
      PGUSER: ${{ secrets.SCW_CI_BACKEND_USER }}
      PGPASSWORD: ${{ secrets.SCW_CI_BACKEND_PASSWORD }}
      custom_directory: ./terraform/environments/ci/custom

    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3

      - name: Create custom env stack
        working-directory: ${{ env.custom_directory }}
        run: sed -i.bak "s|###___ENV_NAME___###|${{ needs.prepare.outputs.env_name }}|g" main.tf
        # the -i option replaces main.tf in-place creating a .bak backup file

      - name: Init terraform
        working-directory: ${{ env.custom_directory }}
        run: terraform init

      - name: get outputs
        working-directory: ${{ env.custom_directory }}
        run: terraform output -json > output.json

      - name: destroy endpoints
        working-directory: ${{ env.custom_directory }}
        # comment every 'resource "scaleway_container_domain"'
        run: |
          sed -i.bak -E '/resource "scaleway_container_domain"/,/^}/s/^(.*)$/#\1/g' main.tf
          terraform apply -no-color -input=false -lock-timeout=15m -auto-approve \
            -var="api_image_tag=$(jq -r '.api_image_tag.value' output.json)" \
            -var="admin_image_tag=$(jq -r '.admin_image_tag.value' output.json)" \
            -var="app_image_tag=$(jq -r '.app_image_tag.value' output.json)"

      - name: recreate endpoints
        working-directory: ${{ env.custom_directory }}
        # uncomment every 'resource "scaleway_container_domain"'
        run: |
          sed -i.bak -E '/#resource "scaleway_container_domain"/,/^#}/s/^#(.*)$/\1/g' main.tf
          terraform apply -no-color -input=false -lock-timeout=15m -auto-approve \
            -var="api_image_tag=$(jq -r '.api_image_tag.value' output.json)" \
            -var="admin_image_tag=$(jq -r '.admin_image_tag.value' output.json)" \
            -var="app_image_tag=$(jq -r '.app_image_tag.value' output.json)"
