name: Clean images tags

on:
  workflow_call:
    inputs:
      registry:
        description: "Registry endpoint"
        required: true
      lifetime:
        description: "Lifetime of image tag"
        default: "1m"
      region:
        description: "Region of the registry"
        default: "fr-par"
      api_endpoint:
        description: "Stable tag for the image"
        default: "https://api.scaleway.com/registry/v1/regions"
    secrets:
      secret_key:
        description: "Secret key"
        required: true

jobs:
  clean_tags:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app_name: [admin, api, app]


    steps:
      - name: Get registry name
        id: registry_name
        shell: bash
        run: |
          registry_name=$(echo "${{ inputs.registry }}" | cut -d "/" -f 2)
          echo $registry_name
          echo "registry_name=$registry_name" >> $GITHUB_OUTPUT

      - name: Get registry ID
        id: registry_id
        shell: bash
        env:
          SCW_SECRET_KEY: ${{ secrets.secret_key }}
        run: |
          registry_id=$(
            curl -sX GET -H "X-Auth-Token: $SCW_SECRET_KEY" \
              "${{ inputs.api_endpoint }}/${{ inputs.region }}/namespaces?name=${{ steps.registry_name.outputs.registry_name }}" \
            | jq -r ".namespaces[0].id"
          )
          echo $registry_id
          echo "registry_id=$registry_id" >> $GITHUB_OUTPUT

      - name: Get image ID
        id: image_id
        shell: bash
        env:
          SCW_SECRET_KEY: ${{ secrets.secret_key }}
        run: |
          image_id=$(
            curl -sX GET -H "X-Auth-Token: $SCW_SECRET_KEY" \
              "${{ inputs.api_endpoint }}/${{ inputs.region }}/images?namespace_id=${{ steps.registry_id.outputs.registry_id }}&name=${{ matrix.app_name }}" \
            | jq -r ".images[0].id"
          )
          echo $image_id
          echo "image_id=$image_id" >> $GITHUB_OUTPUT

      - name: Check tag existence
        shell: bash
        env:
          SCW_SECRET_KEY: ${{ secrets.secret_key }}
        run: |
          curl -sX GET -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "${{ inputs.api_endpoint }}/${{ inputs.region }}/images/${{ steps.image_id.outputs.image_id }}/tags?name=${{ inputs.image_tag }}" \
          | jq -r ".tags[] | select(.updated_at < \"$(date -I -v-${{ inputs.lifetime }})\") |Â .id" \
          > tags_ids
          while read tag_id
          do
              echo "$tag_id"
          done < tags_ids
