env:
  SUBFOLDER_NAME: api
  APP_NAME: snu-api
  ENVIRONMENT_NAME: snu-api

  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  SLACK_COLOR: "#3278BD"
  SLACK_ICON_EMOJI: ":package:"
  SLACK_USERNAME: Github
  MSG_MINIMAL: true
  SLACK_FOOTER: ""

name: Test & Deploy API

on:
  push:
    branches:
      - staging
    paths:
      - api/**
      - lib/**

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Node 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Add lib into current folder
        run: |
          cp -Rf ./lib ./api/snu-lib
          sed -i 's/file:\.\.\/lib/file:.\/snu-lib/' ./api/package.json

      - name: Install packages
        working-directory: ${{ env.SUBFOLDER_NAME }}
        run: npm install

      - name: Create SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
          sudo chmod 600 ~/.ssh/id_ed25519
          echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}

      - name: Change ssh key file permissions
        run: |
          chmod go-rwx ~/.ssh/id_ed25519

      - name: Remove git folder
        run: |
          rm -rf .git

      - name: Add lib into current folder
        run: |
          cp -Rf ./lib ./api/snu-lib
          sed -i 's/file:\.\.\/lib/file:.\/snu-lib/' ./api/package.json

      - name: Push
        working-directory: ${{ env.SUBFOLDER_NAME }}
        run: |
          git init
          git config user.email "github.deployer@gmail.com"
          git config user.name "Github Deployer"
          git remote add cloudstaging "$CLEVER_CLOUD_GIT_REMOTE_STAGING"
          git add .
          git commit -m "For deploy"
          git push -f -u cloudstaging master
        env:
          CLEVER_CLOUD_GIT_REMOTE_STAGING: ${{ secrets.CLEVER_CLOUD_GIT_REMOTE_API_STAGING }}

      - name: Notification on failure
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_TITLE: Failed to deploy api

      # - name: Notification on success
      #   if: ${{ success() }}
      #   uses: rtCamp/action-slack-notify@master
      #   env:
      #     SLACK_TITLE: api staging deployed
