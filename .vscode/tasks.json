{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Install and start All applications",
      "dependsOn": ["Install dependencies", "Start All Applications"],
      "dependsOrder": "sequence",
      "problemMatcher": [],
      "group": {
        "kind": "build",
        "isDefault": true
      }
    },
    {
      "label": "Install and start Admin",
      "dependsOn": ["Install dependencies", "Start Admin Applications"],
      "dependsOrder": "sequence",
      "problemMatcher": [],
      "group": {
        "kind": "build",
        "isDefault": true
      }
    },
    {
      "label": "Install and start App",
      "dependsOn": ["Install dependencies", "Start App Applications"],
      "dependsOrder": "sequence",
      "problemMatcher": [],
      "group": {
        "kind": "build",
        "isDefault": true
      }
    },
    {
      "label": "Install dependencies",
      "command": "npm install",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./"
      }
    },
    {
      "label": "Build dependencies",
      "command": "npm run build",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./"
      }
    },
    {
      "label": "Clean dependencies",
      "command": "npm run clean",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./"
      }
    },
    {
      "label": "Start Admin Applications",
      "dependsOn": [
        "Start snu-lib",
        "Start snu-ds",
        "Start Api-v1",
        "Start Api-v2",
        "Start Admin"
      ],
      "problemMatcher": []
    },
    {
      "label": "Start App Applications",
      "dependsOn": [
        "Start snu-lib",
        "Start snu-ds",
        "Start Api-v1",
        "Start Api-v2",
        "Start App"
      ],
      "problemMatcher": []
    },
    {
      "label": "Start All Applications",
      "dependsOn": [
        "Start snu-lib",
        "Start snu-ds",
        "Start Api-v1",
        "Start Api-v2",
        "Start Admin",
        "Start App",
        "Start Support"
      ],
      "problemMatcher": []
    },
    {
      "label": "Start App",
      "dependsOn": ["Build snu-lib"],
      "command": "source ~/.zshrc && nvm use && npm run dev:app app",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./"
      }
    },
    {
      "label": "Start Admin",
      "dependsOn": ["Build snu-lib"],
      "command": "source ~/.zshrc && nvm use && npm run dev:app admin",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./"
      }
    },
    {
      "label": "Start Api-v1",
      "dependsOn": ["Start Api-v1 API", "Start Api-v1 TASKS"],
      "problemMatcher": []
    },
    {
      "label": "Start Api-v1 API",
      "dependsOn": ["Build snu-lib"],
      "command": "source ~/.zshrc && nvm use && npm run dev:api",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./api"
      }
    },
    {
      "label": "Start Api-v1 TASKS",
      "dependsOn": ["Build snu-lib"],
      "command": "source ~/.zshrc && nvm use && npm run dev:tasks",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./api"
      }
    },
    {
      "label": "Start Api-v2",
      "dependsOn": ["Start Api-v2 API", "Start Api-v2 TASKS"],
      "problemMatcher": []
    },
    {
      "label": "Start Api-v2 API",
      "dependsOn": ["Build snu-lib"],
      "command": "source ~/.zshrc && nvm use && npm run dev:api",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./apiv2"
      }
    },
    {
      "label": "Start Api-v2 TASKS",
      "dependsOn": ["Build snu-lib"],
      "command": "source ~/.zshrc && nvm use && npm run dev:tasks",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./apiv2"
      }
    },
    {
      "label": "Start Apiv2",
      "command": "source ~/.zshrc && nvm use && npm run dev:app apiv2",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./apiv2"
      }
    },
    {
      "label": "Start snu-lib",
      "dependsOn": ["Build snu-lib"],
      "command": "source ~/.zshrc && nvm use && npm run dev:app snu-lib",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./"
      }
    },
    {
      "label": "Build snu-lib",
      "dependsOn": ["Clean turbo", "Clean snu-lib"],
      "command": "source ~/.zshrc && nvm use && APP_NAME=snu-lib npm run build",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./"
      }
    },
    {
      "label": "Clean snu-lib",
      "command": "rm -fr .turbo common-js dist .rollup.cache",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./packages/lib"
      }
    },
    {
      "label": "Start snu-ds",
      "command": "source ~/.zshrc && nvm use && npm run dev:app @snu/ds",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./"
      }
    },
    {
      "label": "Start Analytics",
      "command": "npm run dev:app analytics",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./"
      }
    },
    {
      "label": "Start Support",
      "command": "npm install && npm run dev",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./knowledge-base-public"
      }
    },
    {
      "label": "Open coverage",
      "command": "open coverage/lcov-report/index.html",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./api"
      }
    },
    {
      "label": "Run&Open coverage",
      "command": "npm run coverage; open coverage/lcov-report/index.html",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./api"
      }
    },
    {
      "label": "Run local containers",
      "command": "docker compose up -d",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./devops/local"
      }
    },
    {
      "label": "Remove local containers",
      "command": "docker compose down",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./devops/local"
      }
    },
    {
      "label": "Pull staging db",
      "command": "source ../../.env && export $(cut -d= -f1 ../../.env) && ./pull_staging.sh",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./devops/local"
      }
    },
    {
      "label": "Get branch endpoints",
      "command": "source .env && export $(cut -d= -f1 .env) && npm run endpoints",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./"
      }
    },
    {
      "label": "Clean turbo",
      "command": "rm -fr .turbo ; rm -fr */*/.turbo ; true",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./"
      }
    }
  ]
}
