{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Install and start All applications",
      "dependsOn": ["Install dependencies", "Start All Applications"],
      "dependsOrder": "sequence",
      "problemMatcher": [],
      "group": {
        "kind": "build",
        "isDefault": true
      }
    },
    {
      "label": "Install and start Admin",
      "dependsOn": ["Install dependencies", "Start Admin Applications"],
      "dependsOrder": "sequence",
      "problemMatcher": [],
      "group": {
        "kind": "build",
        "isDefault": true
      }
    },
    {
      "label": "Install and start App",
      "dependsOn": ["Install dependencies", "Start App Applications"],
      "dependsOrder": "sequence",
      "problemMatcher": [],
      "group": {
        "kind": "build",
        "isDefault": true
      }
    },
    {
      "label": "Install dependencies",
      "command": "npm install",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./"
      }
    },
    {
      "label": "Build dependencies",
      "command": "APP_NAME=\\!antivirus npm run build",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./"
      }
    },
    {
      "label": "Clean dependencies",
      "command": "npm run clean",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./"
      }
    },
    {
      "label": "Start Admin Applications",
      "dependsOn": [
        "Start Lib",
        "Start DS",
        "Start Api",
        "Start Apiv2",
        "Start Admin"
      ],
      "problemMatcher": []
    },
    {
      "label": "Start App Applications",
      "dependsOn": [
        "Start Lib",
        "Start DS",
        "Start Api",
        "Start Apiv2",
        "Start App"
      ],
      "problemMatcher": []
    },
    {
      "label": "Start All Applications",
      "dependsOn": [
        "Start Lib",
        "Start DS",
        "Start Api",
        "Start Apiv2",
        "Start Admin",
        "Start App",
        "Start Support"
      ],
      "problemMatcher": []
    },
    {
      "label": "Start App",
      "command": "npm run dev:app app",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./"
      }
    },
    {
      "label": "Start Admin",
      "command": "npm run dev:app admin",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./"
      }
    },
    {
      "label": "Start Api",
      "command": "npm run dev:app api",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./"
      }
    },
    {
      "label": "Start Apiv2",
      "command": "npm run dev:app apiv2",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./"
      }
    },
    {
      "label": "Start Antivirus",
      "command": "npm run dev:app antivirus",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./"
      }
    },
    {
      "label": "Start Lib",
      "command": "npm run dev:app snu-lib",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./"
      }
    },
    {
      "label": "Start DS",
      "command": "npm run dev:app @snu/ds",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./"
      }
    },
    {
      "label": "Start Analytics",
      "command": "npm run dev:app analytics",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./"
      }
    },
    {
      "label": "Start Support",
      "command": "npm install && npm run dev",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./knowledge-base-public"
      }
    },
    {
      "label": "Open coverage",
      "command": "open coverage/lcov-report/index.html",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./api"
      }
    },
    {
      "label": "Run&Open coverage",
      "command": "npm run coverage; open coverage/lcov-report/index.html",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./api"
      }
    },
    {
      "label": "Run local containers",
      "command": "docker compose up -d",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./devops/local"
      }
    },
    {
      "label": "Remove local containers",
      "command": "docker compose down",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./devops/local"
      }
    },
    {
      "label": "Pull staging db",
      "command": "source ../../.env && export $(cut -d= -f1 ../../.env) && ./pull_staging.sh",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./devops/local"
      }
    },
    {
      "label": "Get branch endpoints",
      "command": "source .env && export $(cut -d= -f1 .env) && npm run endpoints",
      "type": "shell",
      "problemMatcher": [],
      "options": {
        "cwd": "./"
      }
    }
  ]
}
